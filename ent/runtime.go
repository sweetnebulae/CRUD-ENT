// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/sweetnebulae/go_ent/ent/book"
	"github.com/sweetnebulae/go_ent/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	bookFields := schema.Book{}.Fields()
	_ = bookFields
	// bookDescTitle is the schema descriptor for title field.
	bookDescTitle := bookFields[1].Descriptor()
	// book.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	book.TitleValidator = bookDescTitle.Validators[0].(func(string) error)
	// bookDescGenre is the schema descriptor for genre field.
	bookDescGenre := bookFields[4].Descriptor()
	// book.GenreValidator is a validator for the "genre" field. It is called by the builders before save.
	book.GenreValidator = bookDescGenre.Validators[0].(func(string) error)
	// bookDescCreatedAt is the schema descriptor for CreatedAt field.
	bookDescCreatedAt := bookFields[5].Descriptor()
	// book.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	book.DefaultCreatedAt = bookDescCreatedAt.Default.(func() time.Time)
	// bookDescUpdatedAt is the schema descriptor for UpdatedAt field.
	bookDescUpdatedAt := bookFields[6].Descriptor()
	// book.DefaultUpdatedAt holds the default value on creation for the UpdatedAt field.
	book.DefaultUpdatedAt = bookDescUpdatedAt.Default.(func() time.Time)
	// bookDescID is the schema descriptor for id field.
	bookDescID := bookFields[0].Descriptor()
	// book.DefaultID holds the default value on creation for the id field.
	book.DefaultID = bookDescID.Default.(func() uuid.UUID)
}
